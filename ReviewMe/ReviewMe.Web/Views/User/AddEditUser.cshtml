@using Microsoft.Web.Mvc.Controls
@using ReviewMe.Common.Extensions;
@using ReviewMe.ViewModel;
@model ReviewMe.ViewModel.UserViewModel
@{
    Layout = null;
}

@Scripts.Render("~/bundles/jqueryval")

<link href="~/CSS/datepicker.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    @if (Model.Id != 0)
    {
        <h4 class="modal-title">Edit User</h4>
    }
    else
    {
        <h4 class="modal-title">Add User</h4>
    }
</div>
<div class="modal-body">
    @using (Html.BeginForm("AddEditUser", "User", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", @id = "frmAddEditUser" }))
    {
        <div class="col-sm-3 profile-row">
            <div class="left-col">
                <div class="profile-block">
                    <div class=" profile-photo">
                        @if (!string.IsNullOrEmpty(Model.UserImage))
                        {
                            var path = Path.Combine(Server.MapPath("~/ProfileImages/"), Model.UserImage);
                            if (File.Exists(path))
                            {
                                <img id="profileImage" src="/ProfileImages/@Model.UserImage" width="160" height="160" class="img-circle" />
                            }
                            else
                            {
                                <img id="profileImage" src="~/ProfileImages/default.jpg" width="160" height="160" class="img-circle" />
                            }
                        }
                        else
                        {
                            <img id="profileImage" src="~/ProfileImages/default.jpg" width="160" height="160" class="img-circle" />
                        }
                    </div><br>
                    <span class="btn btn-info btn-file btn-block">
                        Upload Photo <input type="file" id="FilePath" name="FilePath" onchange="readURL(this)">
                    </span>
                </div>
            </div>
        </div>
        <div class="col-sm-9 ">
            <div class="row">
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)
                <div class="">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">First Name<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.FName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FName)
                            </div>
                        </div><!-- col-sm-6 -->
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Middle Name</label>
                                @Html.TextBoxFor(m => m.MName, new { @class = "form-control" })
                            </div>
                        </div><!-- col-sm-6 -->
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Last Name<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.LName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LName)
                            </div>
                        </div><!-- col-sm-6 -->
                    </div><!-- row -->
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Address</label>
                                @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                            </div>
                        </div><!-- col-sm-6 -->
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Gender<span style="color: red">*</span></label>
                                <div class="radio" style="margin-top: 0;">
                                    <label>
                                        @Html.RadioButtonFor(model => model.Gender, true, new { id = "male", @class = "px" })
                                        <span class="lbl">Male</span>
                                    </label>
                                </div>
                                <div class="radio" style="margin-top: 0;">
                                    <label>
                                        @Html.RadioButtonFor(model => model.Gender, false, new { id = "female", @class = "px", })
                                        <span class="lbl">Female</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Role<span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.SelectedRoleId, Model.DropDownForRoles.ToSelectList(a => a.Value, a => a.Text, a => a.Selected), "Select Role", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.SelectedRoleId)
                            </div>
                        </div>

                    </div><!-- row -->
                    <div class="row">
                        
                        <div class="col-sm-8">                         
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Email<span style="color: red">*</span></label>
                                <div class="input-group">  
                                    @if (((ReviewMe.ViewModel.UserViewModel)Model).EmailId == null)
                                    {
                                           @Html.TextBoxFor(m => m.EmailId, new { @placeholder = "ex: xyz", @class = "form-control",  })                              
                                    <span class="input-group-addon" id="basic-addon2">
                                        <button  id="btnEmail" class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            &#64;wwindia.com <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a href="#" id="1">&#64;wwindia.com</a></li>
                                            <li><a href="#" id="2">&#64;neosofttech.com</a></li>
                                        </ul>                                  
                                    </span>
                                    }
                                    else
                                    {
                                           @Html.TextBoxFor(m => m.EmailId, new { @placeholder = "ex: xyz", @class = "form-control", @readonly=true })                              
                                    <span class="input-group-addon" id="basic-addon2">
                                        <button  id="btnEmail" class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            &#64;wwindia.com <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu email" style="display:none">
                                            <li><a href="#" id="1">&#64;wwindia.com</a></li>
                                            <li><a href="#" id="2">&#64;neosofttech.com</a></li>
                                        </ul>                                  
                                    </span>
                                    }
                                 
                                </div>
                                @Html.ValidationMessageFor(m => m.EmailId)
                            </div>
                            </div>                    
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">TeamLeader</label>
                                @Html.DropDownListFor(m => m.SelectedTeamLeadId, Model.DropDownForTeamLeader.ToSelectList(a => a.Value, a => a.Text, a => a.Selected), "Select TeamLeader", new { @class = "form-control" })
                            </div>
                        </div><!-- col-sm-6 -->
                    </div><!-- row -->

                    <div class="row">
                        <div class="col-sm-4">
                              <div class="form-group no-margin-hr">
                              <label class="control-label">Technology<span style="color: red">*</span></label>
                              @Html.DropDownListFor(m => m.SelectedTechnologyId, Model.DropDownForTechnology.ToSelectList(a => a.Value, a => a.Text, a => a.Selected), "Select Technology", new { @class = "form-control" })
                              @Html.ValidationMessageFor(m => m.SelectedTechnologyId)
                              </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Mobile Number<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.MobileNo)
                            </div>
                        </div><!-- col-sm-6 -->
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Alternate Mobile Number</label>
                                @Html.TextBoxFor(m => m.AlternateContactNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AlternateContactNo)
                            </div>
                        </div><!-- col-sm-6 -->
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <label class="control-label">Dob<span style="color: red">*</span></label>                                
                               @if (((ReviewMe.ViewModel.UserViewModel)Model).EmailId == null)
                               {
                                    <input class="datepicker form-control valid" placeholder="MM/dd/yyyy" data-val="true" readonly="true" data-val-required="Please enter birth date" id="Dob" name="Dob" type="text" value="">

                               }
                               else
                               {
                                <input class="datepicker form-control valid" placeholder="MM/dd/yyyy" data-val="true" readonly="true" data-val-required="Please enter birth date" id="Dob" name="Dob" type="text" value="@String.Format("{0:d}",Model.Dob)">
                               }
                                     @Html.ValidationMessageFor(m => m.Dob)
                                @*<br/>*@
                             
                            </div>
                        </div><!-- col-sm-6 -->

                        @if (((ReviewMe.ViewModel.UserViewModel)Model).EmailId == null)
                        { 
                            <div class="col-sm-4">
                                <div class="form-group no-margin-hr">
                                    <label class="control-label">Password<span style="color: red">*</span></label>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password)
                                </div>
                            </div><!-- col-sm-6 -->
                            <div class="col-sm-4">
                                <div class="form-group no-margin-hr">
                                    <label class="control-label">Confirm Password<span style="color: red">*</span></label>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                </div>
                            </div><!-- col-sm-6 -->
                        }


                    </div><!-- row -->
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group no-margin-hr">
                                <div class="checkbox" style="margin: 0;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.OnClient, false)
                                        @Html.Label("On Client")
                                    </label>
                                </div>
                                <div class="checkbox" style="margin: 0;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.OnProject, false)
                                        @Html.Label("On Project")
                                    </label>
                                </div>
                                <div class="checkbox" style="margin: 0;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.OnTask, false)
                                        @Html.Label("On Task")
                                    </label>
                                </div>
                            </div>
                        </div><!-- col-sm-6 -->
                    </div><!-- row -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" >Close</button>
                <button id="btnSaveUser"  type="submit" class="btn btn-primary">Save changes</button>
            </div>
        </div>
        
    }
</div>
<script type="text/javascript">
    $(function () {

        var isFormvalid = false;

        $('.dropdown-menu a').click(function () {
             $('#btnEmail').text($(this).text());
        });

        $('#frmAddEditUser').validate();

        $('.input-group-addon').css('padding', '3px')

        $('.datepicker').datepicker({
            startDate: '-3d'

        }).on('changeDate', function (e) {
            $(this).datepicker('hide');
        });

        $('#btnSaveUser').click(function () {
            if($('#frmAddEditUser').valid())
            {
                //Checking whether email address is valid or not.            
                var emailAddress = $('#EmailId').val()
                var domail_id = $('#btnEmail').text().trim();
                var id = $('#Id').val();
            
                if (id == 0)
                {
                    emailAddress = emailAddress + domail_id;
                }  
                var status = IsValidEmailAddress(emailAddress);
                if (status)
                {
                    $('#EmailId').val(emailAddress);
                }
                return status;
            }
        });

        $('#SelectedRoleId').unbind("change").bind("change", function () {

        });

        $("#EmailId").keydown(function (e) {

            if (e.which == 9)
            {                   
                //Checking whether email address is valid or not.            
                var domail_id = $('#btnEmail').text().trim();
                var emailAddress = $('#EmailId').val() + domail_id;
                var status = IsValidEmailAddress(emailAddress);
                return status;
            }
        });

    });

    function IsValidEmailAddress(emailAddress)
    {
        var status = false;
        $.ajax({
            url: "/User/IsValidEmailAddress?emailAddress=" + emailAddress,
            type: "GET",
            data: {},
            async: false,
            success: function (data) {
               
                if (data.Status == "Error") {
                    $('#EmailId').parent().next().html("<span class='field-validation-error' data-valmsg-for='EmailId' data-valmsg-replace='true'><span for='EmailId' class='' >Please enter a valid email address</span></span>");
                    status =false;
                }
                if(data.Status=="Success")
                {
                    status= true;
                }
            },
            error: function (data) {
            }
        });
        return status;
    }

</script>