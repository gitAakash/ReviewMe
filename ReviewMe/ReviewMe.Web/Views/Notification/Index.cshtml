@using ReviewMe.Common.Enums
@using ReviewMe.Common.Extensions
@using ReviewMe.ViewModel
@using ReviewMe.Web.Controllers
@using ReviewMe.Common.Helpers
@using ReviewMe.Common.Authorization
@using EnumHelper = ReviewMe.Common.Enums.EnumHelper
@model IEnumerable<ReviewMe.ViewModel.NotificationsViewModel>

@{
    ViewBag.Title = "Notifications";
}
<ul class="breadcrumb breadcrumb-page">
    <div class="breadcrumb-label text-light-gray">You are here: </div>
    <li><a href="@Url.Action("Index", "Home")">Home</a></li>
    <li class="active"><a href="#">Notifications</a></li>
</ul>
                      <div class="page-header">

                          <div class="row">
                              <h1 class="col-xs-12 col-sm-4 text-center text-left-sm"><i class="fa fa-bullhorn"></i>&nbsp;&nbsp;All Notifications</h1>
                          </div>
                      </div>
   
                      <div class="col-md-12">
                          <div class="panel panel-warning">
                              <div class="tab-content">
                                  <div class="widget-comments panel-body tab-pane no-padding fade active in">
                                      <div class="panel-padding no-padding-vr">
                                          @if (Model.Any())
                                          {
                                              foreach (var item in Model)
                                              {
                                                  <div class="comment">
                                                      @if (!string.IsNullOrEmpty(item.CreatedByUser.UserImage))
                                                      {
                                                          var path = Path.Combine(Server.MapPath("~/ProfileImages/"), item.CreatedByUser.UserImage);
                                                          if (File.Exists(path))
                                                          {
                                                              @Html.Raw("<img src='/ProfileImages/" + @item.CreatedByUser.UserImage + "' class='comment-avatar img-circle' />")
                                                          }
                                                          else
                                                          {
                                                              <img src="~/ProfileImages/default.jpg" class='comment-avatar img-circle' />
                                                          }
                                                      }
                                                      else
                                                      {
                                                          <img src="~/ProfileImages/default.jpg" class='comment-avatar img-circle' />
                                                      }
                                                      <div class="comment-body">
                                                          <div class="comment-by">
                                                              <a href="javascript:void(0)" title="">@item.CreatedByUser.FName  @item.CreatedByUser.LName </a>
                                                          </div>
                                                      <div class="comment-text">
                                                          @if (item.NotificationType == (int)NotificationType.AddedReview)
                                                          {
                                                              @Html.Raw(EnumHelper.DescriptionAttr<NotificationType>(NotificationType.AddedReview) + " " + item.ReviewForDate.ToString("D"))
                                                          }
                                                          else if (item.NotificationType == (int)NotificationType.EditedReview)
                                                          {
                                                              @Html.Raw(EnumHelper.DescriptionAttr<NotificationType>(NotificationType.EditedReview) + " " + item.ReviewForDate.ToString("D"))
                                                          }
                                                          else if (item.NotificationType == (int)NotificationType.NotifyReviwer)
                                                          {
                                                              @Html.Raw(EnumHelper.DescriptionAttr<NotificationType>(NotificationType.NotifyReviwer) )
                                                          }
                                                          else if (item.NotificationType == (int)NotificationType.NotifyReviewee)
                                                          {
                                                              @Html.Raw(EnumHelper.DescriptionAttr<NotificationType>(NotificationType.NotifyReviewee) )
                                                          }
                                                      </div>
                                                      <div class="comment-actions " style="margin-bottom:20px;">
                                                          <span class="pull-right">@CalculateDateDiffrenceHelper.DifferenceBetTwoDates(item.CreatedOn, System.DateTime.Now)</span>
                                                      </div>
                                                  </div>
                                              </div>
                                              }
                                          }
                                      </div>
                                  </div>
                              </div>
                          </div>
                      </div>
                    